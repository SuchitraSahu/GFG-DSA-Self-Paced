//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution {
  public:
    // Function to fill the array elements into a hash table
    // using Linear Probing to handle collisions.
    vector<int> linearProbing(int hashSize, int arr[], int n) 
    {
        vector<int> hash(hashSize,-1); // creating vector hash of size n and elements to -1
        
        
        for(int i=0;i<n;i++)
        {
            int key = (arr[i]%hashSize);
            
            if(hash[key] == -1)
            {
                hash[key] = arr[i];
            }
            else if(hash[key] == arr[i]) 
            {
                continue;
            }
            else
            {
                int start = key;
                bool inserted  = false;
                while(true)
                {
                    key = ((key+1)%hashSize);
                    
                    if(hash[key] == -1) //found space
                    {
                        hash[key] = arr[i];
                        inserted = true;
                        break;
                    }
                    
                    if(hash[key] == arr[i]) //duplicates
                    {
                        break;
                    }
                    
                    if(key == start) // no space
                    {
                        break;
                    }
                }
                
                if(!inserted) //if empty slot is found
                {
                    continue;
                }
            }
        }
        
        return hash;
    }
};

//{ Driver Code Starts.
int main() {
    int t;
    cin >> t;
    while (t--) {
        int hashSize;
        cin >> hashSize;

        int sizeOfArray;
        cin >> sizeOfArray;
        int arr[sizeOfArray];

        for (int i = 0; i < sizeOfArray; i++)
            cin >> arr[i];

        vector<int> hash;
        Solution obj;

        hash = obj.linearProbing(hashSize, arr, sizeOfArray);

        for (int i = 0; i < hashSize; i++)
            cout << hash[i] << " ";

        cout << endl;
    }
    return 0;
}

// } Driver Code Ends