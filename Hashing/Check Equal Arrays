//{ Driver Code Starts
// Initial template for C++

#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
// User function template for C++

class Solution {
  public:
    // Function to check if two arrays are equal or not.
    bool check(vector<int>& arr1, vector<int>& arr2) 
    {
        // code here
        map<int,int> count1;
        map<int,int> count2;
        
        int n = arr1.size(); // same as arr1
        
        for(int i=0;i<n;i++)
        {
            if(count1.find(arr1[i]) != count1.end())
            {
                count1[arr1[i]]++;
            }
            else
            {
                count1[arr1[i]] = 1;
            }
        }
        
        for(int j=0;j<n;j++)
        {
            if(count2.find(arr2[j]) != count2.end())
            {
                count2[arr2[j]]++;
            }
            else
            {
                count2[arr2[j]] = 1;
            }
        }
        
        if(count1 == count2) { return true;}
        else { return false;}
    }
};

//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    cin.ignore(); // Ignore the newline character after t
    while (t--) {
        vector<int> arr1, arr2;
        string input1, input2;

        getline(cin, input1); // Read the entire line for the first array elements
        stringstream ss1(input1);
        int number;
        while (ss1 >> number) {
            arr1.push_back(number);
        }

        getline(cin, input2); // Read the entire line for the second array elements
        stringstream ss2(input2);
        while (ss2 >> number) {
            arr2.push_back(number);
        }

        Solution ob;
        cout << (ob.check(arr1, arr2) ? "true" : "false") << "\n";
    }
    return 0;
}
// } Driver Code Ends
