//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution {
  public:
    // Complete this function
    // Function to sort the array according to frequency of elements.
    vector<int> sortByFreq(vector<int>& arr) 
    {
        // Your code here
        unordered_map<int,int> m;
        int n = arr.size();
        vector<pair<int,int>> freqvec;
        
        for(int i=0;i<n;i++)
        {
            m[arr[i]]++;
        }
        
        for(auto& elem : m)
        {
            freqvec.push_back({elem.first, elem.second});
        }
        
        sort(freqvec.begin(),freqvec.end(), [](const pair<int,int> &a, const pair<int,int> &b)
        {
            if(a.second==b.second)
            {
                return a.first < b.first; // If frequencies are equal, sort by value (ascending)
            }
            
            return a.second>b.second; // Otherwise, sort by frequency (descending)
        });
        
        vector<int> ans;
        
        for(auto& p : freqvec)
        {
            for(int i=0;i<p.second;i++)
            {
                ans.push_back(p.first);
            }
        }
        
        return ans;
       
    }
    
    
    
};

//{ Driver Code Starts.

int main() {

    int t;
    cin >> t;
    cin.ignore();
    while (t--) {

        string input;
        int num;
        vector<int> arr;

        getline(cin, input);
        stringstream s2(input);
        while (s2 >> num) {
            arr.push_back(num);
        }
        Solution obj;
        vector<int> v;
        v = obj.sortByFreq(arr);
        for (int i : v)
            cout << i << " ";
        cout << endl;
    }

    return 0;
}

// } Driver Code Ends
