//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution {
  public:
    vector<int> spirallyTraverse(vector<vector<int> > &m) 
    {
       // code here
       vector<int> ans;
       int r = m.size();
       int c = m[0].size();
       int top = 0;
       int bot = r-1;
       int left = 0;
       int right = c-1;
       
       while(top<=bot && left<=right)
       {
           for(int i=left;i<=right;i++)
           {
               ans.push_back(m[top][i]);
           }
           top++;
           
           for(int i=top;i<=bot;i++)
           {
               ans.push_back(m[i][right]);
           }
           right--;
           
           if(top<=bot)
           {
               for(int i=right;i>=left;i--)
               {
                   ans.push_back(m[bot][i]);
               }
               bot--;
           }
           if(left<=right)
           {
               for(int i=bot;i>=top;i--)
               {
                   ans.push_back(m[i][left]);
               }
               left++;
           }
       }
        
        return ans;
    
    }
};

//{ Driver Code Starts.
int main() {
    int t;
    cin >> t;

    while (t--) {
        int r, c;
        cin >> r >> c;
        vector<vector<int>> matrix(r, vector<int>(c, 0));

        for (int i = 0; i < r; i++) {
            for (int j = 0; j < c; j++) {
                cin >> matrix[i][j];
            }
        }

        Solution ob;
        vector<int> result = ob.spirallyTraverse(matrix);
        for (int i = 0; i < result.size(); ++i)
            cout << result[i] << " ";
        cout << endl;
    }
    return 0;
}
// } Driver Code Ends
