//{ Driver Code Starts
#include <bits/stdc++.h> 
using namespace std; 

// } Driver Code Ends


class Solution
{   
    public:
    //Function for finding determinant of matrix.
    int determinantOfMatrix(vector<vector<int> > m, int n)
    {
        // code here 
        int det = 0;
        if(n==1)
        {
            return m[0][0];
        }
        if(n==2)
        {
            return (m[0][0]*m[1][1]) - (m[0][1]*m[1][0]);
        }
        
        for(int i=0;i<n;i++)
        {
            vector<vector<int>> minor = minorMatrix(m,n,0,i);
            int minorDet = determinantOfMatrix(minor,n-1);
            det += (i%2==0 ?  1 : -1)*m[0][i]*minorDet;   
            
        }
            
        return det;
    }
    
    vector<vector<int>> minorMatrix(vector<vector<int>> m, int n, int excludeRow, int excludeCol)
    {
        vector<vector<int>> minor;
        for(int i=0;i<n;i++)
        {
            if(i == excludeRow) continue;
            vector<int> row;
            for(int j=0;j<n;j++)
            {
                if(j==excludeCol) continue;
                row.push_back(m[i][j]);
            }
            minor.push_back(row);
        }
        
        return minor;
    }
};

//{ Driver Code Starts.
int main() {
    int t;
    cin>>t;
    
    while(t--) 
    {
        int n;
        cin>>n;
        vector<vector<int> > matrix(n); 

        for(int i=0; i<n; i++)
        {
            matrix[i].assign(n, 0);
            for( int j=0; j<n; j++)
            {
                cin>>matrix[i][j];
            }
        }

        Solution ob;
        int result = ob.determinantOfMatrix(matrix, n);
        cout<<result<<endl;
    }
    return 0;
}
// } Driver Code Ends
