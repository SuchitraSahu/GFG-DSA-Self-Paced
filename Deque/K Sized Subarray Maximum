//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
// User function template for C++

class Solution {
  public:
    // Function to find maximum of each subarray of size k.
    vector<int> maxOfSubarrays(vector<int>& arr, int k) 
    {
        // code here
        deque<int> d;
        vector<int> res;
        int n = arr.size();
        
        for(int i=0;i<k;i++) //for the first cycle only
        {
            while(!d.empty() && arr[d.back()]<=arr[i])
            {
                d.pop_back();
            }
            d.push_back(i);
        }
       for(int i=k;i<n;i++)
       {
           res.push_back(arr[d.front()]);
            //remove elems not in curr cycle
            while(!d.empty() && d.front() <= i-k)
            {
                d.pop_front();
            }
            
            //remve smaller ones bfr addig max from back
            while(!d.empty() && arr[i] >= arr[d.back()])
            {
                d.pop_back();
            }
            d.push_back(i);
       }
       
       //last elem 
       res.push_back(arr[d.front()]);
       
       return res;
        
    }
};

//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    cin.ignore(); // Ignore newline character after t

    while (t--) {
        vector<int> arr;
        int k;
        string inputLine;

        getline(cin, inputLine); // Read the array input as a line
        stringstream ss(inputLine);
        int value;
        while (ss >> value) {
            arr.push_back(value);
        }

        cin >> k;
        cin.ignore(); // Ignore newline character after k input

        Solution obj;
        vector<int> res = obj.maxOfSubarrays(arr, k);
        for (int i = 0; i < res.size(); i++)
            cout << res[i] << " ";
        cout << endl;
        cout << "~"
             << "\n";
    }

    return 0;
}

// } Driver Code Ends
