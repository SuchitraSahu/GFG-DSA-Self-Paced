//{ Driver Code Starts
// Initial Template for C++

#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
// User function Template for C++



//TYPE 1
// Function to rotate deque by k places in clockwise direction.
void right_Rotate_Deq_ByK(deque<int> &deq, int k) 
{
    // your code here
    
    for(int i=0;i<k;i++)
    {
       int elem = deq.back();
       deq.pop_back();
       deq.push_front(elem);
    }
}

//TYPE 2
// Function to rotate deque by k places in anti-clockwise direction.
void left_Rotate_Deq_ByK(deque<int> &deq, int k) 
{
    // your code here
    for(int i=0;i<k;i++)
    {
       int elem = deq.front();
       deq.pop_front();
       deq.push_back(elem);
    }
}



//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    cin.ignore();
    while (t--) {
        string str;
        getline(cin, str);

        stringstream ss(str);
        deque<int> deq;
        int num;
        while (ss >> num) {
            deq.push_back(num);
        }
        int rotateQuery;
        string str1;
        getline(cin, str1);

        stringstream ss1(str1);
        int num1;
        while (ss1 >> num1) {
            rotateQuery = num1;
        }
        int k;
        string str2;
        getline(cin, str2);

        stringstream ss2(str2);
        int num2;
        while (ss2 >> num2) {
            k = num2;
        }

        if (rotateQuery == 1)
            right_Rotate_Deq_ByK(deq, k);

        else
            left_Rotate_Deq_ByK(deq, k);

        for (auto itr = deq.begin(); itr != deq.end(); itr++)
            cout << *itr << " ";
        cout << endl;
    }
    return 0;
}

// } Driver Code Ends
