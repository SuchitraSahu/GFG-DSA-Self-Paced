//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std; 


void printVector(const vector<int>& a) 
{ 
    for (auto e : a) { 
        cout << e << " "; 
    }
    cout<<endl;
} 

// } Driver Code Ends
class Solution{
  public:
    // A, B, and C: input sorted arrays
    //Function to merge three sorted vectors or arrays 
    //into a single vector or array.
    vector<int> mergeThree(vector<int>& A, vector<int>& B, vector<int>& C) 
    { 
        //Your code here
        vector<int> R;
        int N = A.size();
        int M = B.size();
        int P = C.size();
        
        int a=0,b=0,c=0,m=0;
        
        while(a<N && b<M && c<P)
        {
            if(A[a] < B[b] && A[a] < C[c])
            {
                R.push_back(A[a++]);
            }
            else if(B[b] < A[a] && B[b] < C[c])
            {
                R.push_back(B[b++]);
            }
            else
            {
                R.push_back(C[c++]);
            }
        }
        
        while(a<N)
        {
            R.push_back(A[a++]);
        }
        
        while(b<M)
        {
            R.push_back(B[b++]);
        }
        
        while(c<P)
        {
            R.push_back(C[c++]);
        }
        
        sort(R.begin(),R.end());
        
        
        return R;
    } 

};

//{ Driver Code Starts.

int main() 
{ 


    int t;
    cin>>t;
    while(t--){
    int n,m,o;
    cin>>n>>m>>o;
    vector<int> A,B,C;
    for(int i=0;i<n;i++){
        int x;
        cin>>x;
        A.push_back(x);
    }
    
    for(int i=0;i<m;i++){
        int x;
        cin>>x;
        B.push_back(x);
    }
    
    for(int i=0;i<o;i++){
        int x;
        cin>>x;
        C.push_back(x);
    }

    Solution obj;
    vector<int>ans = obj.mergeThree(A, B, C);
    for(auto i: ans)cout << i << " ";
    cout << "\n";
    // obj.printVector(mergeThree(A, B, C)); 
    
    }
   
    return 0; 
} 

// } Driver Code Ends
